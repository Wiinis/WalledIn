===== WalledIn =====         (working title)

A 2D multiplayer action game

=== Gameplay ===

The gameplay is currenly in an early alpha stage, but the general idea will be the following:
The player can run around and shoot other players. The player can pick up items
(health, armour, weapons). The player will be able to build walls or other
kinds of obstructions in order to wall in the other players. The walls also
give the player protection from bullets and can be used to build
bridges and stairs. 

We aim at fast paced action.

What the winning conditions will be, how the walls or other obstructions are
spawned and what other cool features will be added, is still subject to
discussion. Send us an email if you have a cool idea!

=== Building & Running ===

Building is currently very easy. If you have eclipse you can simply import the project and it should run if you are on 64 bit Linux. If you are not you will have to find the native libs for JOGL (google is you friend) and change the native directory of the jogl.jar lib in the project config to where the native libs are located.

If you want to compile and run it from the command line then you should include all the libs in the libs dir and set the correct path for the native libs when running.

In the future we are planning to make a build script that makes a runnable jar file.

=== Textures ===

The textures are copied from the game teeworlds (http://www.teeworlds.com),
with permission. We are planning to replace the textures, but we will use these during development.

=== Help wanted ===

If you are an experienced (game) developer, you are welcome to apply for a
position in our team. Knowledge of OOP is a must, previous game development
experience or experience with OpenGL is a plus.

If you are a good artist, you are more than welcome to design player skins,
level tiles, levels, menu backgrounds et cetera. 

If you are interested or want more information, you can always send us an e-mail.

=== Misc ===

The game is made in Java and uses JOGL OpenGL bindings to render the graphics.
All the developers currently use Eclipse, but it should also run in Netbeans
without trouble.
